                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.9 #10185 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module Radio
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _free
                                     13 	.globl _malloc
                                     14 	.globl _memcpy
                                     15 	.globl _MODE
                                     16 	.globl _RE
                                     17 	.globl _SLAVE
                                     18 	.globl _FE
                                     19 	.globl _ERR
                                     20 	.globl _RX_BYTE
                                     21 	.globl _TX_BYTE
                                     22 	.globl _ACTIVE
                                     23 	.globl _B_7
                                     24 	.globl _B_6
                                     25 	.globl _B_5
                                     26 	.globl _B_4
                                     27 	.globl _B_3
                                     28 	.globl _B_2
                                     29 	.globl _B_1
                                     30 	.globl _B_0
                                     31 	.globl _WDTIF
                                     32 	.globl _P1IF
                                     33 	.globl _UTX1IF
                                     34 	.globl _UTX0IF
                                     35 	.globl _P2IF
                                     36 	.globl _ACC_7
                                     37 	.globl _ACC_6
                                     38 	.globl _ACC_5
                                     39 	.globl _ACC_4
                                     40 	.globl _ACC_3
                                     41 	.globl _ACC_2
                                     42 	.globl _ACC_1
                                     43 	.globl _ACC_0
                                     44 	.globl _OVFIM
                                     45 	.globl _T4CH1IF
                                     46 	.globl _T4CH0IF
                                     47 	.globl _T4OVFIF
                                     48 	.globl _T3CH1IF
                                     49 	.globl _T3CH0IF
                                     50 	.globl _T3OVFIF
                                     51 	.globl _CY
                                     52 	.globl _AC
                                     53 	.globl _F0
                                     54 	.globl _RS1
                                     55 	.globl _RS0
                                     56 	.globl _OV
                                     57 	.globl _F1
                                     58 	.globl _P
                                     59 	.globl _STIF
                                     60 	.globl _P0IF
                                     61 	.globl _T4IF
                                     62 	.globl _T3IF
                                     63 	.globl _T2IF
                                     64 	.globl _T1IF
                                     65 	.globl _DMAIF
                                     66 	.globl _P0IE
                                     67 	.globl _T4IE
                                     68 	.globl _T3IE
                                     69 	.globl _T2IE
                                     70 	.globl _T1IE
                                     71 	.globl _DMAIE
                                     72 	.globl _EA
                                     73 	.globl _STIE
                                     74 	.globl _ENCIE
                                     75 	.globl _URX1IE
                                     76 	.globl _URX0IE
                                     77 	.globl _ADCIE
                                     78 	.globl _RFTXRXIE
                                     79 	.globl _P2_7
                                     80 	.globl _P2_6
                                     81 	.globl _P2_5
                                     82 	.globl _P2_4
                                     83 	.globl _P2_3
                                     84 	.globl _P2_2
                                     85 	.globl _P2_1
                                     86 	.globl _P2_0
                                     87 	.globl _ENCIF_1
                                     88 	.globl _ENCIF_0
                                     89 	.globl _P1_7
                                     90 	.globl _P1_6
                                     91 	.globl _P1_5
                                     92 	.globl _P1_4
                                     93 	.globl _P1_3
                                     94 	.globl _P1_2
                                     95 	.globl _P1_1
                                     96 	.globl _P1_0
                                     97 	.globl _URX1IF
                                     98 	.globl _ADCIF
                                     99 	.globl _URX0IF
                                    100 	.globl _IT1
                                    101 	.globl _RFTXRXIF
                                    102 	.globl _IT0
                                    103 	.globl _P0_7
                                    104 	.globl _P0_6
                                    105 	.globl _P0_5
                                    106 	.globl _P0_4
                                    107 	.globl _P0_3
                                    108 	.globl _P0_2
                                    109 	.globl _P0_1
                                    110 	.globl _P0_0
                                    111 	.globl _P2DIR
                                    112 	.globl _P1DIR
                                    113 	.globl _P0DIR
                                    114 	.globl _U1GCR
                                    115 	.globl _U1UCR
                                    116 	.globl _U1BAUD
                                    117 	.globl _U1DBUF
                                    118 	.globl _U1CSR
                                    119 	.globl _P2INP
                                    120 	.globl _P1INP
                                    121 	.globl _P2SEL
                                    122 	.globl _P1SEL
                                    123 	.globl _P0SEL
                                    124 	.globl _ADCCFG
                                    125 	.globl _PERCFG
                                    126 	.globl _B
                                    127 	.globl _T4CC1
                                    128 	.globl _T4CCTL1
                                    129 	.globl _T4CC0
                                    130 	.globl _T4CCTL0
                                    131 	.globl _T4CTL
                                    132 	.globl _T4CNT
                                    133 	.globl _RFIF
                                    134 	.globl _IRCON2
                                    135 	.globl _T1CCTL2
                                    136 	.globl _T1CCTL1
                                    137 	.globl _T1CCTL0
                                    138 	.globl _T1CTL
                                    139 	.globl _T1CNTH
                                    140 	.globl _T1CNTL
                                    141 	.globl _RFST
                                    142 	.globl _ACC
                                    143 	.globl _T1CC2H
                                    144 	.globl _T1CC2L
                                    145 	.globl _T1CC1H
                                    146 	.globl _T1CC1L
                                    147 	.globl _T1CC0H
                                    148 	.globl _T1CC0L
                                    149 	.globl _RFD
                                    150 	.globl _TIMIF
                                    151 	.globl _DMAREQ
                                    152 	.globl _DMAARM
                                    153 	.globl _DMA0CFGH
                                    154 	.globl _DMA0CFGL
                                    155 	.globl _DMA1CFGH
                                    156 	.globl _DMA1CFGL
                                    157 	.globl _DMAIRQ
                                    158 	.globl _PSW
                                    159 	.globl _T3CC1
                                    160 	.globl _T3CCTL1
                                    161 	.globl _T3CC0
                                    162 	.globl _T3CCTL0
                                    163 	.globl _T3CTL
                                    164 	.globl _T3CNT
                                    165 	.globl _WDCTL
                                    166 	.globl __SFRC8
                                    167 	.globl _MEMCTR
                                    168 	.globl _CLKCON
                                    169 	.globl _U0GCR
                                    170 	.globl _U0UCR
                                    171 	.globl __SFRC3
                                    172 	.globl _U0BAUD
                                    173 	.globl _U0DBUF
                                    174 	.globl _IRCON
                                    175 	.globl __SFRBF
                                    176 	.globl _SLEEP
                                    177 	.globl _RNDH
                                    178 	.globl _RNDL
                                    179 	.globl _ADCH
                                    180 	.globl _ADCL
                                    181 	.globl _IP1
                                    182 	.globl _IEN1
                                    183 	.globl __SFRB7
                                    184 	.globl _ADCCON3
                                    185 	.globl _ADCCON2
                                    186 	.globl _ADCCON1
                                    187 	.globl _ENCCS
                                    188 	.globl _ENCDO
                                    189 	.globl _ENCDI
                                    190 	.globl __SFRB0
                                    191 	.globl _FWDATA
                                    192 	.globl _FCTL
                                    193 	.globl _FADDRH
                                    194 	.globl _FADDRL
                                    195 	.globl _FWT
                                    196 	.globl __SFRAA
                                    197 	.globl _IP0
                                    198 	.globl _IEN0
                                    199 	.globl __SFRA7
                                    200 	.globl _WORTIME1
                                    201 	.globl _WORTIME0
                                    202 	.globl _WOREVT1
                                    203 	.globl _WOREVT0
                                    204 	.globl _WORCTRL
                                    205 	.globl _WORIRQ
                                    206 	.globl _P2
                                    207 	.globl __SFR9F
                                    208 	.globl _T2CTL
                                    209 	.globl _T2PR
                                    210 	.globl _T2CT
                                    211 	.globl _S1CON
                                    212 	.globl _IEN2
                                    213 	.globl __SFR99
                                    214 	.globl _S0CON
                                    215 	.globl __SFR97
                                    216 	.globl __SFR96
                                    217 	.globl __SFR95
                                    218 	.globl __SFR94
                                    219 	.globl __XPAGE
                                    220 	.globl _MPAGE
                                    221 	.globl _DPS
                                    222 	.globl _RFIM
                                    223 	.globl _P1
                                    224 	.globl _P0INP
                                    225 	.globl __SFR8E
                                    226 	.globl _P1IEN
                                    227 	.globl _PICTL
                                    228 	.globl _P2IFG
                                    229 	.globl _P1IFG
                                    230 	.globl _P0IFG
                                    231 	.globl _TCON
                                    232 	.globl _PCON
                                    233 	.globl _U0CSR
                                    234 	.globl _DPH1
                                    235 	.globl _DPL1
                                    236 	.globl _DPH0
                                    237 	.globl _DPL0
                                    238 	.globl _SP
                                    239 	.globl _P0
                                    240 	.globl _uartProtConfig
                                    241 	.globl _uartTxBuffer
                                    242 	.globl _uartRxBuffer
                                    243 	.globl _uartTxIndex
                                    244 	.globl _uartRxIndex
                                    245 	.globl _uartDmaRxTxCh
                                    246 	.globl _X_P2DIR
                                    247 	.globl _X_P1DIR
                                    248 	.globl _X_P0DIR
                                    249 	.globl _X_U1GCR
                                    250 	.globl _X_U1UCR
                                    251 	.globl _X_U1BAUD
                                    252 	.globl _X_U1DBUF
                                    253 	.globl _X_U1CSR
                                    254 	.globl _X_P2INP
                                    255 	.globl _X_P1INP
                                    256 	.globl _X_P2SEL
                                    257 	.globl _X_P1SEL
                                    258 	.globl _X_P0SEL
                                    259 	.globl _X_ADCCFG
                                    260 	.globl _X_PERCFG
                                    261 	.globl __NA_B
                                    262 	.globl _X_T4CC1
                                    263 	.globl _X_T4CCTL1
                                    264 	.globl _X_T4CC0
                                    265 	.globl _X_T4CCTL0
                                    266 	.globl _X_T4CTL
                                    267 	.globl _X_T4CNT
                                    268 	.globl _X_RFIF
                                    269 	.globl __NA_IRCON2
                                    270 	.globl _X_T1CCTL2
                                    271 	.globl _X_T1CCTL1
                                    272 	.globl _X_T1CCTL0
                                    273 	.globl _X_T1CTL
                                    274 	.globl _X_T1CNTH
                                    275 	.globl _X_T1CNTL
                                    276 	.globl _X_RFST
                                    277 	.globl __NA_ACC
                                    278 	.globl _X_T1CC2H
                                    279 	.globl _X_T1CC2L
                                    280 	.globl _X_T1CC1H
                                    281 	.globl _X_T1CC1L
                                    282 	.globl _X_T1CC0H
                                    283 	.globl _X_T1CC0L
                                    284 	.globl _X_RFD
                                    285 	.globl _X_TIMIF
                                    286 	.globl _X_DMAREQ
                                    287 	.globl _X_DMAARM
                                    288 	.globl _X_DMA0CFGH
                                    289 	.globl _X_DMA0CFGL
                                    290 	.globl _X_DMA1CFGH
                                    291 	.globl _X_DMA1CFGL
                                    292 	.globl _X_DMAIRQ
                                    293 	.globl __NA_PSW
                                    294 	.globl _X_T3CC1
                                    295 	.globl _X_T3CCTL1
                                    296 	.globl _X_T3CC0
                                    297 	.globl _X_T3CCTL0
                                    298 	.globl _X_T3CTL
                                    299 	.globl _X_T3CNT
                                    300 	.globl _X_WDCTL
                                    301 	.globl __X_SFRC8
                                    302 	.globl _X_MEMCTR
                                    303 	.globl _X_CLKCON
                                    304 	.globl _X_U0GCR
                                    305 	.globl _X_U0UCR
                                    306 	.globl __X_SFRC3
                                    307 	.globl _X_U0BAUD
                                    308 	.globl _X_U0DBUF
                                    309 	.globl __NA_IRCON
                                    310 	.globl __X_SFRBF
                                    311 	.globl _X_SLEEP
                                    312 	.globl _X_RNDH
                                    313 	.globl _X_RNDL
                                    314 	.globl _X_ADCH
                                    315 	.globl _X_ADCL
                                    316 	.globl __NA_IP1
                                    317 	.globl __NA_IEN1
                                    318 	.globl __X_SFRB7
                                    319 	.globl _X_ADCCON3
                                    320 	.globl _X_ADCCON2
                                    321 	.globl _X_ADCCON1
                                    322 	.globl _X_ENCCS
                                    323 	.globl _X_ENCDO
                                    324 	.globl _X_ENCDI
                                    325 	.globl __X_SFRB0
                                    326 	.globl _X_FWDATA
                                    327 	.globl _X_FCTL
                                    328 	.globl _X_FADDRH
                                    329 	.globl _X_FADDRL
                                    330 	.globl _X_FWT
                                    331 	.globl __X_SFRAA
                                    332 	.globl __NA_IP0
                                    333 	.globl __NA_IEN0
                                    334 	.globl __X_SFRA7
                                    335 	.globl _X_WORTIME1
                                    336 	.globl _X_WORTIME0
                                    337 	.globl _X_WOREVT1
                                    338 	.globl _X_WOREVT0
                                    339 	.globl _X_WORCTRL
                                    340 	.globl _X_WORIRQ
                                    341 	.globl __NA_P2
                                    342 	.globl __X_SFR9F
                                    343 	.globl _X_T2CTL
                                    344 	.globl _X_T2PR
                                    345 	.globl _X_T2CT
                                    346 	.globl __NA_S1CON
                                    347 	.globl __NA_IEN2
                                    348 	.globl __X_SFR99
                                    349 	.globl __NA_S0CON
                                    350 	.globl __X_SFR97
                                    351 	.globl __X_SFR96
                                    352 	.globl __X_SFR95
                                    353 	.globl __X_SFR94
                                    354 	.globl _X_MPAGE
                                    355 	.globl __NA_DPS
                                    356 	.globl _X_RFIM
                                    357 	.globl __NA_P1
                                    358 	.globl _X_P0INP
                                    359 	.globl __X_SFR8E
                                    360 	.globl _X_P1IEN
                                    361 	.globl _X_PICTL
                                    362 	.globl _X_P2IFG
                                    363 	.globl _X_P1IFG
                                    364 	.globl _X_P0IFG
                                    365 	.globl __NA_TCON
                                    366 	.globl __NA_PCON
                                    367 	.globl _X_U0CSR
                                    368 	.globl __NA_DPH1
                                    369 	.globl __NA_DPL1
                                    370 	.globl __NA_DPH0
                                    371 	.globl __NA_DPL0
                                    372 	.globl __NA_SP
                                    373 	.globl __NA_P0
                                    374 	.globl _I2SCLKF2
                                    375 	.globl _I2SCLKF1
                                    376 	.globl _I2SCLKF0
                                    377 	.globl _I2SSTAT
                                    378 	.globl _I2SWCNT
                                    379 	.globl _I2SDATH
                                    380 	.globl _I2SDATL
                                    381 	.globl _I2SCFG1
                                    382 	.globl _I2SCFG0
                                    383 	.globl _VCO_VC_DAC
                                    384 	.globl _PKTSTATUS
                                    385 	.globl _MARCSTATE
                                    386 	.globl _RSSI
                                    387 	.globl _LQI
                                    388 	.globl _FREQEST
                                    389 	.globl _VERSION
                                    390 	.globl _PARTNUM
                                    391 	.globl __XREGDF35
                                    392 	.globl __XREGDF34
                                    393 	.globl __XREGDF33
                                    394 	.globl __XREGDF32
                                    395 	.globl _IOCFG0
                                    396 	.globl _IOCFG1
                                    397 	.globl _IOCFG2
                                    398 	.globl _PA_TABLE0
                                    399 	.globl _PA_TABLE1
                                    400 	.globl _PA_TABLE2
                                    401 	.globl _PA_TABLE3
                                    402 	.globl _PA_TABLE4
                                    403 	.globl _PA_TABLE5
                                    404 	.globl _PA_TABLE6
                                    405 	.globl _PA_TABLE7
                                    406 	.globl __XREGDF26
                                    407 	.globl _TEST0
                                    408 	.globl _TEST1
                                    409 	.globl _TEST2
                                    410 	.globl __XREGDF22
                                    411 	.globl __XREGDF21
                                    412 	.globl __XREGDF20
                                    413 	.globl _FSCAL0
                                    414 	.globl _FSCAL1
                                    415 	.globl _FSCAL2
                                    416 	.globl _FSCAL3
                                    417 	.globl _FREND0
                                    418 	.globl _FREND1
                                    419 	.globl _AGCCTRL0
                                    420 	.globl _AGCCTRL1
                                    421 	.globl _AGCCTRL2
                                    422 	.globl _BSCFG
                                    423 	.globl _FOCCFG
                                    424 	.globl _MCSM0
                                    425 	.globl _MCSM1
                                    426 	.globl _MCSM2
                                    427 	.globl _DEVIATN
                                    428 	.globl _MDMCFG0
                                    429 	.globl _MDMCFG1
                                    430 	.globl _MDMCFG2
                                    431 	.globl _MDMCFG3
                                    432 	.globl _MDMCFG4
                                    433 	.globl _FREQ0
                                    434 	.globl _FREQ1
                                    435 	.globl _FREQ2
                                    436 	.globl _FSCTRL0
                                    437 	.globl _FSCTRL1
                                    438 	.globl _CHANNR
                                    439 	.globl _ADDR
                                    440 	.globl _PKTCTRL0
                                    441 	.globl _PKTCTRL1
                                    442 	.globl _PKTLEN
                                    443 	.globl _SYNC0
                                    444 	.globl _SYNC1
                                    445 	.globl _MDMCTRL0H
                                    446 	.globl _initConfigRegisters
                                    447 	.globl _initClock
                                    448 	.globl _initRFStateMach
                                    449 	.globl _construct_AX25_Packet
                                    450 	.globl _decomm_AX25_Packet
                                    451 	.globl _DMA_ISR_RX
                                    452 	.globl _DMA_ISR_TX
                                    453 ;--------------------------------------------------------
                                    454 ; special function registers
                                    455 ;--------------------------------------------------------
                                    456 	.area RSEG    (ABS,DATA)
      000000                        457 	.org 0x0000
                           000080   458 _P0	=	0x0080
                           000081   459 _SP	=	0x0081
                           000082   460 _DPL0	=	0x0082
                           000083   461 _DPH0	=	0x0083
                           000084   462 _DPL1	=	0x0084
                           000085   463 _DPH1	=	0x0085
                           000086   464 _U0CSR	=	0x0086
                           000087   465 _PCON	=	0x0087
                           000088   466 _TCON	=	0x0088
                           000089   467 _P0IFG	=	0x0089
                           00008A   468 _P1IFG	=	0x008a
                           00008B   469 _P2IFG	=	0x008b
                           00008C   470 _PICTL	=	0x008c
                           00008D   471 _P1IEN	=	0x008d
                           00008E   472 __SFR8E	=	0x008e
                           00008F   473 _P0INP	=	0x008f
                           000090   474 _P1	=	0x0090
                           000091   475 _RFIM	=	0x0091
                           000092   476 _DPS	=	0x0092
                           000093   477 _MPAGE	=	0x0093
                           000093   478 __XPAGE	=	0x0093
                           000094   479 __SFR94	=	0x0094
                           000095   480 __SFR95	=	0x0095
                           000096   481 __SFR96	=	0x0096
                           000097   482 __SFR97	=	0x0097
                           000098   483 _S0CON	=	0x0098
                           000099   484 __SFR99	=	0x0099
                           00009A   485 _IEN2	=	0x009a
                           00009B   486 _S1CON	=	0x009b
                           00009C   487 _T2CT	=	0x009c
                           00009D   488 _T2PR	=	0x009d
                           00009E   489 _T2CTL	=	0x009e
                           00009F   490 __SFR9F	=	0x009f
                           0000A0   491 _P2	=	0x00a0
                           0000A1   492 _WORIRQ	=	0x00a1
                           0000A2   493 _WORCTRL	=	0x00a2
                           0000A3   494 _WOREVT0	=	0x00a3
                           0000A4   495 _WOREVT1	=	0x00a4
                           0000A5   496 _WORTIME0	=	0x00a5
                           0000A6   497 _WORTIME1	=	0x00a6
                           0000A7   498 __SFRA7	=	0x00a7
                           0000A8   499 _IEN0	=	0x00a8
                           0000A9   500 _IP0	=	0x00a9
                           0000AA   501 __SFRAA	=	0x00aa
                           0000AB   502 _FWT	=	0x00ab
                           0000AC   503 _FADDRL	=	0x00ac
                           0000AD   504 _FADDRH	=	0x00ad
                           0000AE   505 _FCTL	=	0x00ae
                           0000AF   506 _FWDATA	=	0x00af
                           0000B0   507 __SFRB0	=	0x00b0
                           0000B1   508 _ENCDI	=	0x00b1
                           0000B2   509 _ENCDO	=	0x00b2
                           0000B3   510 _ENCCS	=	0x00b3
                           0000B4   511 _ADCCON1	=	0x00b4
                           0000B5   512 _ADCCON2	=	0x00b5
                           0000B6   513 _ADCCON3	=	0x00b6
                           0000B7   514 __SFRB7	=	0x00b7
                           0000B8   515 _IEN1	=	0x00b8
                           0000B9   516 _IP1	=	0x00b9
                           0000BA   517 _ADCL	=	0x00ba
                           0000BB   518 _ADCH	=	0x00bb
                           0000BC   519 _RNDL	=	0x00bc
                           0000BD   520 _RNDH	=	0x00bd
                           0000BE   521 _SLEEP	=	0x00be
                           0000BF   522 __SFRBF	=	0x00bf
                           0000C0   523 _IRCON	=	0x00c0
                           0000C1   524 _U0DBUF	=	0x00c1
                           0000C2   525 _U0BAUD	=	0x00c2
                           0000C3   526 __SFRC3	=	0x00c3
                           0000C4   527 _U0UCR	=	0x00c4
                           0000C5   528 _U0GCR	=	0x00c5
                           0000C6   529 _CLKCON	=	0x00c6
                           0000C7   530 _MEMCTR	=	0x00c7
                           0000C8   531 __SFRC8	=	0x00c8
                           0000C9   532 _WDCTL	=	0x00c9
                           0000CA   533 _T3CNT	=	0x00ca
                           0000CB   534 _T3CTL	=	0x00cb
                           0000CC   535 _T3CCTL0	=	0x00cc
                           0000CD   536 _T3CC0	=	0x00cd
                           0000CE   537 _T3CCTL1	=	0x00ce
                           0000CF   538 _T3CC1	=	0x00cf
                           0000D0   539 _PSW	=	0x00d0
                           0000D1   540 _DMAIRQ	=	0x00d1
                           0000D2   541 _DMA1CFGL	=	0x00d2
                           0000D3   542 _DMA1CFGH	=	0x00d3
                           0000D4   543 _DMA0CFGL	=	0x00d4
                           0000D5   544 _DMA0CFGH	=	0x00d5
                           0000D6   545 _DMAARM	=	0x00d6
                           0000D7   546 _DMAREQ	=	0x00d7
                           0000D8   547 _TIMIF	=	0x00d8
                           0000D9   548 _RFD	=	0x00d9
                           0000DA   549 _T1CC0L	=	0x00da
                           0000DB   550 _T1CC0H	=	0x00db
                           0000DC   551 _T1CC1L	=	0x00dc
                           0000DD   552 _T1CC1H	=	0x00dd
                           0000DE   553 _T1CC2L	=	0x00de
                           0000DF   554 _T1CC2H	=	0x00df
                           0000E0   555 _ACC	=	0x00e0
                           0000E1   556 _RFST	=	0x00e1
                           0000E2   557 _T1CNTL	=	0x00e2
                           0000E3   558 _T1CNTH	=	0x00e3
                           0000E4   559 _T1CTL	=	0x00e4
                           0000E5   560 _T1CCTL0	=	0x00e5
                           0000E6   561 _T1CCTL1	=	0x00e6
                           0000E7   562 _T1CCTL2	=	0x00e7
                           0000E8   563 _IRCON2	=	0x00e8
                           0000E9   564 _RFIF	=	0x00e9
                           0000EA   565 _T4CNT	=	0x00ea
                           0000EB   566 _T4CTL	=	0x00eb
                           0000EC   567 _T4CCTL0	=	0x00ec
                           0000ED   568 _T4CC0	=	0x00ed
                           0000EE   569 _T4CCTL1	=	0x00ee
                           0000EF   570 _T4CC1	=	0x00ef
                           0000F0   571 _B	=	0x00f0
                           0000F1   572 _PERCFG	=	0x00f1
                           0000F2   573 _ADCCFG	=	0x00f2
                           0000F3   574 _P0SEL	=	0x00f3
                           0000F4   575 _P1SEL	=	0x00f4
                           0000F5   576 _P2SEL	=	0x00f5
                           0000F6   577 _P1INP	=	0x00f6
                           0000F7   578 _P2INP	=	0x00f7
                           0000F8   579 _U1CSR	=	0x00f8
                           0000F9   580 _U1DBUF	=	0x00f9
                           0000FA   581 _U1BAUD	=	0x00fa
                           0000FB   582 _U1UCR	=	0x00fb
                           0000FC   583 _U1GCR	=	0x00fc
                           0000FD   584 _P0DIR	=	0x00fd
                           0000FE   585 _P1DIR	=	0x00fe
                           0000FF   586 _P2DIR	=	0x00ff
                                    587 ;--------------------------------------------------------
                                    588 ; special function bits
                                    589 ;--------------------------------------------------------
                                    590 	.area RSEG    (ABS,DATA)
      000000                        591 	.org 0x0000
                           000080   592 _P0_0	=	0x0080
                           000081   593 _P0_1	=	0x0081
                           000082   594 _P0_2	=	0x0082
                           000083   595 _P0_3	=	0x0083
                           000084   596 _P0_4	=	0x0084
                           000085   597 _P0_5	=	0x0085
                           000086   598 _P0_6	=	0x0086
                           000087   599 _P0_7	=	0x0087
                           000088   600 _IT0	=	0x0088
                           000089   601 _RFTXRXIF	=	0x0089
                           00008A   602 _IT1	=	0x008a
                           00008B   603 _URX0IF	=	0x008b
                           00008D   604 _ADCIF	=	0x008d
                           00008F   605 _URX1IF	=	0x008f
                           000090   606 _P1_0	=	0x0090
                           000091   607 _P1_1	=	0x0091
                           000092   608 _P1_2	=	0x0092
                           000093   609 _P1_3	=	0x0093
                           000094   610 _P1_4	=	0x0094
                           000095   611 _P1_5	=	0x0095
                           000096   612 _P1_6	=	0x0096
                           000097   613 _P1_7	=	0x0097
                           000098   614 _ENCIF_0	=	0x0098
                           000099   615 _ENCIF_1	=	0x0099
                           0000A0   616 _P2_0	=	0x00a0
                           0000A1   617 _P2_1	=	0x00a1
                           0000A2   618 _P2_2	=	0x00a2
                           0000A3   619 _P2_3	=	0x00a3
                           0000A4   620 _P2_4	=	0x00a4
                           0000A5   621 _P2_5	=	0x00a5
                           0000A6   622 _P2_6	=	0x00a6
                           0000A7   623 _P2_7	=	0x00a7
                           0000A8   624 _RFTXRXIE	=	0x00a8
                           0000A9   625 _ADCIE	=	0x00a9
                           0000AA   626 _URX0IE	=	0x00aa
                           0000AB   627 _URX1IE	=	0x00ab
                           0000AC   628 _ENCIE	=	0x00ac
                           0000AD   629 _STIE	=	0x00ad
                           0000AF   630 _EA	=	0x00af
                           0000B8   631 _DMAIE	=	0x00b8
                           0000B9   632 _T1IE	=	0x00b9
                           0000BA   633 _T2IE	=	0x00ba
                           0000BB   634 _T3IE	=	0x00bb
                           0000BC   635 _T4IE	=	0x00bc
                           0000BD   636 _P0IE	=	0x00bd
                           0000C0   637 _DMAIF	=	0x00c0
                           0000C1   638 _T1IF	=	0x00c1
                           0000C2   639 _T2IF	=	0x00c2
                           0000C3   640 _T3IF	=	0x00c3
                           0000C4   641 _T4IF	=	0x00c4
                           0000C5   642 _P0IF	=	0x00c5
                           0000C7   643 _STIF	=	0x00c7
                           0000D0   644 _P	=	0x00d0
                           0000D1   645 _F1	=	0x00d1
                           0000D2   646 _OV	=	0x00d2
                           0000D3   647 _RS0	=	0x00d3
                           0000D4   648 _RS1	=	0x00d4
                           0000D5   649 _F0	=	0x00d5
                           0000D6   650 _AC	=	0x00d6
                           0000D7   651 _CY	=	0x00d7
                           0000D8   652 _T3OVFIF	=	0x00d8
                           0000D9   653 _T3CH0IF	=	0x00d9
                           0000DA   654 _T3CH1IF	=	0x00da
                           0000DB   655 _T4OVFIF	=	0x00db
                           0000DC   656 _T4CH0IF	=	0x00dc
                           0000DD   657 _T4CH1IF	=	0x00dd
                           0000DE   658 _OVFIM	=	0x00de
                           0000E0   659 _ACC_0	=	0x00e0
                           0000E1   660 _ACC_1	=	0x00e1
                           0000E2   661 _ACC_2	=	0x00e2
                           0000E3   662 _ACC_3	=	0x00e3
                           0000E4   663 _ACC_4	=	0x00e4
                           0000E5   664 _ACC_5	=	0x00e5
                           0000E6   665 _ACC_6	=	0x00e6
                           0000E7   666 _ACC_7	=	0x00e7
                           0000E8   667 _P2IF	=	0x00e8
                           0000E9   668 _UTX0IF	=	0x00e9
                           0000EA   669 _UTX1IF	=	0x00ea
                           0000EB   670 _P1IF	=	0x00eb
                           0000EC   671 _WDTIF	=	0x00ec
                           0000F0   672 _B_0	=	0x00f0
                           0000F1   673 _B_1	=	0x00f1
                           0000F2   674 _B_2	=	0x00f2
                           0000F3   675 _B_3	=	0x00f3
                           0000F4   676 _B_4	=	0x00f4
                           0000F5   677 _B_5	=	0x00f5
                           0000F6   678 _B_6	=	0x00f6
                           0000F7   679 _B_7	=	0x00f7
                           0000F8   680 _ACTIVE	=	0x00f8
                           0000F9   681 _TX_BYTE	=	0x00f9
                           0000FA   682 _RX_BYTE	=	0x00fa
                           0000FB   683 _ERR	=	0x00fb
                           0000FC   684 _FE	=	0x00fc
                           0000FD   685 _SLAVE	=	0x00fd
                           0000FE   686 _RE	=	0x00fe
                           0000FF   687 _MODE	=	0x00ff
                                    688 ;--------------------------------------------------------
                                    689 ; overlayable register banks
                                    690 ;--------------------------------------------------------
                                    691 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        692 	.ds 8
                                    693 ;--------------------------------------------------------
                                    694 ; internal ram data
                                    695 ;--------------------------------------------------------
                                    696 	.area DSEG    (DATA)
      000000                        697 _construct_AX25_Packet_frame_1_65:
      000000                        698 	.ds 3
      000003                        699 _construct_AX25_Packet_new_Frame_Ptr_1_66:
      000003                        700 	.ds 3
      000006                        701 _decomm_AX25_Packet_frame_1_67:
      000006                        702 	.ds 3
      000009                        703 _decomm_AX25_Packet_dataFrame_1_68:
      000009                        704 	.ds 3
                                    705 ;--------------------------------------------------------
                                    706 ; overlayable items in internal ram 
                                    707 ;--------------------------------------------------------
                                    708 ;--------------------------------------------------------
                                    709 ; Stack segment in internal ram 
                                    710 ;--------------------------------------------------------
                                    711 	.area	SSEG
      000000                        712 __start__stack:
      000000                        713 	.ds	1
                                    714 
                                    715 ;--------------------------------------------------------
                                    716 ; indirectly addressable internal ram data
                                    717 ;--------------------------------------------------------
                                    718 	.area ISEG    (DATA)
                                    719 ;--------------------------------------------------------
                                    720 ; absolute internal ram data
                                    721 ;--------------------------------------------------------
                                    722 	.area IABS    (ABS,DATA)
                                    723 	.area IABS    (ABS,DATA)
                                    724 ;--------------------------------------------------------
                                    725 ; bit data
                                    726 ;--------------------------------------------------------
                                    727 	.area BSEG    (BIT)
                                    728 ;--------------------------------------------------------
                                    729 ; paged external ram data
                                    730 ;--------------------------------------------------------
                                    731 	.area PSEG    (PAG,XDATA)
                                    732 ;--------------------------------------------------------
                                    733 ; external ram data
                                    734 ;--------------------------------------------------------
                                    735 	.area XSEG    (XDATA)
                           00DF02   736 _MDMCTRL0H	=	0xdf02
                           00DF00   737 _SYNC1	=	0xdf00
                           00DF01   738 _SYNC0	=	0xdf01
                           00DF02   739 _PKTLEN	=	0xdf02
                           00DF03   740 _PKTCTRL1	=	0xdf03
                           00DF04   741 _PKTCTRL0	=	0xdf04
                           00DF05   742 _ADDR	=	0xdf05
                           00DF06   743 _CHANNR	=	0xdf06
                           00DF07   744 _FSCTRL1	=	0xdf07
                           00DF08   745 _FSCTRL0	=	0xdf08
                           00DF09   746 _FREQ2	=	0xdf09
                           00DF0A   747 _FREQ1	=	0xdf0a
                           00DF0B   748 _FREQ0	=	0xdf0b
                           00DF0C   749 _MDMCFG4	=	0xdf0c
                           00DF0D   750 _MDMCFG3	=	0xdf0d
                           00DF0E   751 _MDMCFG2	=	0xdf0e
                           00DF0F   752 _MDMCFG1	=	0xdf0f
                           00DF10   753 _MDMCFG0	=	0xdf10
                           00DF11   754 _DEVIATN	=	0xdf11
                           00DF12   755 _MCSM2	=	0xdf12
                           00DF13   756 _MCSM1	=	0xdf13
                           00DF14   757 _MCSM0	=	0xdf14
                           00DF15   758 _FOCCFG	=	0xdf15
                           00DF16   759 _BSCFG	=	0xdf16
                           00DF17   760 _AGCCTRL2	=	0xdf17
                           00DF18   761 _AGCCTRL1	=	0xdf18
                           00DF19   762 _AGCCTRL0	=	0xdf19
                           00DF1A   763 _FREND1	=	0xdf1a
                           00DF1B   764 _FREND0	=	0xdf1b
                           00DF1C   765 _FSCAL3	=	0xdf1c
                           00DF1D   766 _FSCAL2	=	0xdf1d
                           00DF1E   767 _FSCAL1	=	0xdf1e
                           00DF1F   768 _FSCAL0	=	0xdf1f
                           00DF20   769 __XREGDF20	=	0xdf20
                           00DF21   770 __XREGDF21	=	0xdf21
                           00DF22   771 __XREGDF22	=	0xdf22
                           00DF23   772 _TEST2	=	0xdf23
                           00DF24   773 _TEST1	=	0xdf24
                           00DF25   774 _TEST0	=	0xdf25
                           00DF26   775 __XREGDF26	=	0xdf26
                           00DF27   776 _PA_TABLE7	=	0xdf27
                           00DF28   777 _PA_TABLE6	=	0xdf28
                           00DF29   778 _PA_TABLE5	=	0xdf29
                           00DF2A   779 _PA_TABLE4	=	0xdf2a
                           00DF2B   780 _PA_TABLE3	=	0xdf2b
                           00DF2C   781 _PA_TABLE2	=	0xdf2c
                           00DF2D   782 _PA_TABLE1	=	0xdf2d
                           00DF2E   783 _PA_TABLE0	=	0xdf2e
                           00DF2F   784 _IOCFG2	=	0xdf2f
                           00DF30   785 _IOCFG1	=	0xdf30
                           00DF31   786 _IOCFG0	=	0xdf31
                           00DF32   787 __XREGDF32	=	0xdf32
                           00DF33   788 __XREGDF33	=	0xdf33
                           00DF34   789 __XREGDF34	=	0xdf34
                           00DF35   790 __XREGDF35	=	0xdf35
                           00DF36   791 _PARTNUM	=	0xdf36
                           00DF37   792 _VERSION	=	0xdf37
                           00DF38   793 _FREQEST	=	0xdf38
                           00DF39   794 _LQI	=	0xdf39
                           00DF3A   795 _RSSI	=	0xdf3a
                           00DF3B   796 _MARCSTATE	=	0xdf3b
                           00DF3C   797 _PKTSTATUS	=	0xdf3c
                           00DF3D   798 _VCO_VC_DAC	=	0xdf3d
                           00DF40   799 _I2SCFG0	=	0xdf40
                           00DF41   800 _I2SCFG1	=	0xdf41
                           00DF42   801 _I2SDATL	=	0xdf42
                           00DF43   802 _I2SDATH	=	0xdf43
                           00DF44   803 _I2SWCNT	=	0xdf44
                           00DF45   804 _I2SSTAT	=	0xdf45
                           00DF46   805 _I2SCLKF0	=	0xdf46
                           00DF47   806 _I2SCLKF1	=	0xdf47
                           00DF48   807 _I2SCLKF2	=	0xdf48
                           00DF80   808 __NA_P0	=	0xdf80
                           00DF81   809 __NA_SP	=	0xdf81
                           00DF82   810 __NA_DPL0	=	0xdf82
                           00DF83   811 __NA_DPH0	=	0xdf83
                           00DF84   812 __NA_DPL1	=	0xdf84
                           00DF85   813 __NA_DPH1	=	0xdf85
                           00DF86   814 _X_U0CSR	=	0xdf86
                           00DF87   815 __NA_PCON	=	0xdf87
                           00DF88   816 __NA_TCON	=	0xdf88
                           00DF89   817 _X_P0IFG	=	0xdf89
                           00DF8A   818 _X_P1IFG	=	0xdf8a
                           00DF8B   819 _X_P2IFG	=	0xdf8b
                           00DF8C   820 _X_PICTL	=	0xdf8c
                           00DF8D   821 _X_P1IEN	=	0xdf8d
                           00DF8E   822 __X_SFR8E	=	0xdf8e
                           00DF8F   823 _X_P0INP	=	0xdf8f
                           00DF90   824 __NA_P1	=	0xdf90
                           00DF91   825 _X_RFIM	=	0xdf91
                           00DF92   826 __NA_DPS	=	0xdf92
                           00DF93   827 _X_MPAGE	=	0xdf93
                           00DF94   828 __X_SFR94	=	0xdf94
                           00DF95   829 __X_SFR95	=	0xdf95
                           00DF96   830 __X_SFR96	=	0xdf96
                           00DF97   831 __X_SFR97	=	0xdf97
                           00DF98   832 __NA_S0CON	=	0xdf98
                           00DF99   833 __X_SFR99	=	0xdf99
                           00DF9A   834 __NA_IEN2	=	0xdf9a
                           00DF9B   835 __NA_S1CON	=	0xdf9b
                           00DF9C   836 _X_T2CT	=	0xdf9c
                           00DF9D   837 _X_T2PR	=	0xdf9d
                           00DF9E   838 _X_T2CTL	=	0xdf9e
                           00DF9F   839 __X_SFR9F	=	0xdf9f
                           00DFA0   840 __NA_P2	=	0xdfa0
                           00DFA1   841 _X_WORIRQ	=	0xdfa1
                           00DFA2   842 _X_WORCTRL	=	0xdfa2
                           00DFA3   843 _X_WOREVT0	=	0xdfa3
                           00DFA4   844 _X_WOREVT1	=	0xdfa4
                           00DFA5   845 _X_WORTIME0	=	0xdfa5
                           00DFA6   846 _X_WORTIME1	=	0xdfa6
                           00DFA7   847 __X_SFRA7	=	0xdfa7
                           00DFA8   848 __NA_IEN0	=	0xdfa8
                           00DFA9   849 __NA_IP0	=	0xdfa9
                           00DFAA   850 __X_SFRAA	=	0xdfaa
                           00DFAB   851 _X_FWT	=	0xdfab
                           00DFAC   852 _X_FADDRL	=	0xdfac
                           00DFAD   853 _X_FADDRH	=	0xdfad
                           00DFAE   854 _X_FCTL	=	0xdfae
                           00DFAF   855 _X_FWDATA	=	0xdfaf
                           00DFB0   856 __X_SFRB0	=	0xdfb0
                           00DFB1   857 _X_ENCDI	=	0xdfb1
                           00DFB2   858 _X_ENCDO	=	0xdfb2
                           00DFB3   859 _X_ENCCS	=	0xdfb3
                           00DFB4   860 _X_ADCCON1	=	0xdfb4
                           00DFB5   861 _X_ADCCON2	=	0xdfb5
                           00DFB6   862 _X_ADCCON3	=	0xdfb6
                           00DFB7   863 __X_SFRB7	=	0xdfb7
                           00DFB8   864 __NA_IEN1	=	0xdfb8
                           00DFB9   865 __NA_IP1	=	0xdfb9
                           00DFBA   866 _X_ADCL	=	0xdfba
                           00DFBB   867 _X_ADCH	=	0xdfbb
                           00DFBC   868 _X_RNDL	=	0xdfbc
                           00DFBD   869 _X_RNDH	=	0xdfbd
                           00DFBE   870 _X_SLEEP	=	0xdfbe
                           00DFBF   871 __X_SFRBF	=	0xdfbf
                           00DFC0   872 __NA_IRCON	=	0xdfc0
                           00DFC1   873 _X_U0DBUF	=	0xdfc1
                           00DFC2   874 _X_U0BAUD	=	0xdfc2
                           00DFC3   875 __X_SFRC3	=	0xdfc3
                           00DFC4   876 _X_U0UCR	=	0xdfc4
                           00DFC5   877 _X_U0GCR	=	0xdfc5
                           00DFC6   878 _X_CLKCON	=	0xdfc6
                           00DFC7   879 _X_MEMCTR	=	0xdfc7
                           00DFC8   880 __X_SFRC8	=	0xdfc8
                           00DFC9   881 _X_WDCTL	=	0xdfc9
                           00DFCA   882 _X_T3CNT	=	0xdfca
                           00DFCB   883 _X_T3CTL	=	0xdfcb
                           00DFCC   884 _X_T3CCTL0	=	0xdfcc
                           00DFCD   885 _X_T3CC0	=	0xdfcd
                           00DFCE   886 _X_T3CCTL1	=	0xdfce
                           00DFCF   887 _X_T3CC1	=	0xdfcf
                           00DFD0   888 __NA_PSW	=	0xdfd0
                           00DFD1   889 _X_DMAIRQ	=	0xdfd1
                           00DFD2   890 _X_DMA1CFGL	=	0xdfd2
                           00DFD3   891 _X_DMA1CFGH	=	0xdfd3
                           00DFD4   892 _X_DMA0CFGL	=	0xdfd4
                           00DFD5   893 _X_DMA0CFGH	=	0xdfd5
                           00DFD6   894 _X_DMAARM	=	0xdfd6
                           00DFD7   895 _X_DMAREQ	=	0xdfd7
                           00DFD8   896 _X_TIMIF	=	0xdfd8
                           00DFD9   897 _X_RFD	=	0xdfd9
                           00DFDA   898 _X_T1CC0L	=	0xdfda
                           00DFDB   899 _X_T1CC0H	=	0xdfdb
                           00DFDC   900 _X_T1CC1L	=	0xdfdc
                           00DFDD   901 _X_T1CC1H	=	0xdfdd
                           00DFDE   902 _X_T1CC2L	=	0xdfde
                           00DFDF   903 _X_T1CC2H	=	0xdfdf
                           00DFE0   904 __NA_ACC	=	0xdfe0
                           00DFE1   905 _X_RFST	=	0xdfe1
                           00DFE2   906 _X_T1CNTL	=	0xdfe2
                           00DFE3   907 _X_T1CNTH	=	0xdfe3
                           00DFE4   908 _X_T1CTL	=	0xdfe4
                           00DFE5   909 _X_T1CCTL0	=	0xdfe5
                           00DFE6   910 _X_T1CCTL1	=	0xdfe6
                           00DFE7   911 _X_T1CCTL2	=	0xdfe7
                           00DFE8   912 __NA_IRCON2	=	0xdfe8
                           00DFE9   913 _X_RFIF	=	0xdfe9
                           00DFEA   914 _X_T4CNT	=	0xdfea
                           00DFEB   915 _X_T4CTL	=	0xdfeb
                           00DFEC   916 _X_T4CCTL0	=	0xdfec
                           00DFED   917 _X_T4CC0	=	0xdfed
                           00DFEE   918 _X_T4CCTL1	=	0xdfee
                           00DFEF   919 _X_T4CC1	=	0xdfef
                           00DFF0   920 __NA_B	=	0xdff0
                           00DFF1   921 _X_PERCFG	=	0xdff1
                           00DFF2   922 _X_ADCCFG	=	0xdff2
                           00DFF3   923 _X_P0SEL	=	0xdff3
                           00DFF4   924 _X_P1SEL	=	0xdff4
                           00DFF5   925 _X_P2SEL	=	0xdff5
                           00DFF6   926 _X_P1INP	=	0xdff6
                           00DFF7   927 _X_P2INP	=	0xdff7
                           00DFF8   928 _X_U1CSR	=	0xdff8
                           00DFF9   929 _X_U1DBUF	=	0xdff9
                           00DFFA   930 _X_U1BAUD	=	0xdffa
                           00DFFB   931 _X_U1UCR	=	0xdffb
                           00DFFC   932 _X_U1GCR	=	0xdffc
                           00DFFD   933 _X_P0DIR	=	0xdffd
                           00DFFE   934 _X_P1DIR	=	0xdffe
                           00DFFF   935 _X_P2DIR	=	0xdfff
                           00F228   936 _uartDmaRxTxCh	=	0xf228
                           00F226   937 _uartRxIndex	=	0xf226
                           00F227   938 _uartTxIndex	=	0xf227
                           00F000   939 _uartRxBuffer	=	0xf000
                           00F113   940 _uartTxBuffer	=	0xf113
                           00F237   941 _uartProtConfig	=	0xf237
                                    942 ;--------------------------------------------------------
                                    943 ; absolute external ram data
                                    944 ;--------------------------------------------------------
                                    945 	.area XABS    (ABS,XDATA)
                                    946 ;--------------------------------------------------------
                                    947 ; external initialized ram data
                                    948 ;--------------------------------------------------------
                                    949 	.area XISEG   (XDATA)
                                    950 	.area HOME    (CODE)
                                    951 	.area GSINIT0 (CODE)
                                    952 	.area GSINIT1 (CODE)
                                    953 	.area GSINIT2 (CODE)
                                    954 	.area GSINIT3 (CODE)
                                    955 	.area GSINIT4 (CODE)
                                    956 	.area GSINIT5 (CODE)
                                    957 	.area GSINIT  (CODE)
                                    958 	.area GSFINAL (CODE)
                                    959 	.area CSEG    (CODE)
                                    960 ;--------------------------------------------------------
                                    961 ; interrupt vector 
                                    962 ;--------------------------------------------------------
                                    963 	.area HOME    (CODE)
      000000                        964 __interrupt_vect:
      000000 02r00r00         [24]  965 	ljmp	__sdcc_gsinit_startup
      000003 32               [24]  966 	reti
      000004                        967 	.ds	7
      00000B 02r03r7D         [24]  968 	ljmp	_DMA_ISR_RX
      00000E                        969 	.ds	5
      000013 02r03rA8         [24]  970 	ljmp	_DMA_ISR_TX
                                    971 ;--------------------------------------------------------
                                    972 ; global & static initialisations
                                    973 ;--------------------------------------------------------
                                    974 	.area HOME    (CODE)
                                    975 	.area GSINIT  (CODE)
                                    976 	.area GSFINAL (CODE)
                                    977 	.area GSINIT  (CODE)
                                    978 	.globl __sdcc_gsinit_startup
                                    979 	.globl __sdcc_program_startup
                                    980 	.globl __start__stack
                                    981 	.globl __mcs51_genXINIT
                                    982 	.globl __mcs51_genXRAMCLEAR
                                    983 	.globl __mcs51_genRAMCLEAR
                                    984 	.area GSFINAL (CODE)
      000000 02r00r16         [24]  985 	ljmp	__sdcc_program_startup
                                    986 ;--------------------------------------------------------
                                    987 ; Home
                                    988 ;--------------------------------------------------------
                                    989 	.area HOME    (CODE)
                                    990 	.area HOME    (CODE)
      000016                        991 __sdcc_program_startup:
      000016 02r00r00         [24]  992 	ljmp	_main
                                    993 ;	return from main will return to caller
                                    994 ;--------------------------------------------------------
                                    995 ; code
                                    996 ;--------------------------------------------------------
                                    997 	.area CSEG    (CODE)
                                    998 ;------------------------------------------------------------
                                    999 ;Allocation info for local variables in function 'main'
                                   1000 ;------------------------------------------------------------
                                   1001 ;	Radio.c:35: void main(void)
                                   1002 ;	-----------------------------------------
                                   1003 ;	 function main
                                   1004 ;	-----------------------------------------
      000000                       1005 _main:
                           000007  1006 	ar7 = 0x07
                           000006  1007 	ar6 = 0x06
                           000005  1008 	ar5 = 0x05
                           000004  1009 	ar4 = 0x04
                           000003  1010 	ar3 = 0x03
                           000002  1011 	ar2 = 0x02
                           000001  1012 	ar1 = 0x01
                           000000  1013 	ar0 = 0x00
                                   1014 ;	Radio.c:38: initConfigRegisters();
      000000 12r00r0B         [24] 1015 	lcall	_initConfigRegisters
                                   1016 ;	Radio.c:39: initClock();
      000003 12r00r86         [24] 1017 	lcall	_initClock
                                   1018 ;	Radio.c:40: initRFStateMach();
      000006 12r00r92         [24] 1019 	lcall	_initRFStateMach
                                   1020 ;	Radio.c:43: while(1)
      000009                       1021 00102$:
                                   1022 ;	Radio.c:48: }
      000009 80 FE            [24] 1023 	sjmp	00102$
                                   1024 ;------------------------------------------------------------
                                   1025 ;Allocation info for local variables in function 'initConfigRegisters'
                                   1026 ;------------------------------------------------------------
                                   1027 ;	Radio.c:60: void initConfigRegisters(void)
                                   1028 ;	-----------------------------------------
                                   1029 ;	 function initConfigRegisters
                                   1030 ;	-----------------------------------------
      00000B                       1031 _initConfigRegisters:
                                   1032 ;	Radio.c:63: PKTCTRL0  = 0x04; //Packet control register
      00000B 90 DF 04         [24] 1033 	mov	dptr,#_PKTCTRL0
      00000E 74 04            [12] 1034 	mov	a,#0x04
      000010 F0               [24] 1035 	movx	@dptr,a
                                   1036 ;	Radio.c:64: PKTCTRL1  = 0x00; //Packet control register
      000011 90 DF 03         [24] 1037 	mov	dptr,#_PKTCTRL1
      000014 E4               [12] 1038 	clr	a
      000015 F0               [24] 1039 	movx	@dptr,a
                                   1040 ;	Radio.c:65: FSCTRL1   = 0x06; //Frequency synthesizer control register
      000016 90 DF 07         [24] 1041 	mov	dptr,#_FSCTRL1
      000019 74 06            [12] 1042 	mov	a,#0x06
      00001B F0               [24] 1043 	movx	@dptr,a
                                   1044 ;	Radio.c:66: FREQ2     = 0x10; //Frequency control word, high byte
      00001C 90 DF 09         [24] 1045 	mov	dptr,#_FREQ2
      00001F 74 10            [12] 1046 	mov	a,#0x10
      000021 F0               [24] 1047 	movx	@dptr,a
                                   1048 ;	Radio.c:67: FREQ1     = 0xCE; //Frequency control word, middle byte
      000022 90 DF 0A         [24] 1049 	mov	dptr,#_FREQ1
      000025 74 CE            [12] 1050 	mov	a,#0xce
      000027 F0               [24] 1051 	movx	@dptr,a
                                   1052 ;	Radio.c:68: FREQ0     = 0xC4; //Frequency control word, low byte
      000028 90 DF 0B         [24] 1053 	mov	dptr,#_FREQ0
      00002B 74 C4            [12] 1054 	mov	a,#0xc4
      00002D F0               [24] 1055 	movx	@dptr,a
                                   1056 ;	Radio.c:69: MDMCFG4   = 0xF5; //Modem configuration
      00002E 90 DF 0C         [24] 1057 	mov	dptr,#_MDMCFG4
      000031 74 F5            [12] 1058 	mov	a,#0xf5
      000033 F0               [24] 1059 	movx	@dptr,a
                                   1060 ;	Radio.c:70: MDMCFG3   = 0x83; //Modem configuration
      000034 90 DF 0D         [24] 1061 	mov	dptr,#_MDMCFG3
      000037 74 83            [12] 1062 	mov	a,#0x83
      000039 F0               [24] 1063 	movx	@dptr,a
                                   1064 ;	Radio.c:71: MDMCFG2   = 0x03; //Modem configuration
      00003A 90 DF 0E         [24] 1065 	mov	dptr,#_MDMCFG2
      00003D 74 03            [12] 1066 	mov	a,#0x03
      00003F F0               [24] 1067 	movx	@dptr,a
                                   1068 ;	Radio.c:72: DEVIATN   = 0x15; //Modem deviation setting
      000040 90 DF 11         [24] 1069 	mov	dptr,#_DEVIATN
      000043 74 15            [12] 1070 	mov	a,#0x15
      000045 F0               [24] 1071 	movx	@dptr,a
                                   1072 ;	Radio.c:73: MCSM0	  = 0x18; //Main radio control state machine configuration
      000046 90 DF 14         [24] 1073 	mov	dptr,#_MCSM0
      000049 74 18            [12] 1074 	mov	a,#0x18
      00004B F0               [24] 1075 	movx	@dptr,a
                                   1076 ;	Radio.c:74: FOCCFG    = 0x17; //Frequency offset compensation configuration
      00004C 90 DF 15         [24] 1077 	mov	dptr,#_FOCCFG
      00004F 14               [12] 1078 	dec	a
      000050 F0               [24] 1079 	movx	@dptr,a
                                   1080 ;	Radio.c:75: FSCAL3    = 0xE9; //Frequency synthesizer calibration
      000051 90 DF 1C         [24] 1081 	mov	dptr,#_FSCAL3
      000054 74 E9            [12] 1082 	mov	a,#0xe9
      000056 F0               [24] 1083 	movx	@dptr,a
                                   1084 ;	Radio.c:76: FSCAL2    = 0x2A; //Frequency synthesizer calibration
      000057 90 DF 1D         [24] 1085 	mov	dptr,#_FSCAL2
      00005A 74 2A            [12] 1086 	mov	a,#0x2a
      00005C F0               [24] 1087 	movx	@dptr,a
                                   1088 ;	Radio.c:77: FSCAL1    = 0x00; //Frequency synthesizer calibration
      00005D 90 DF 1E         [24] 1089 	mov	dptr,#_FSCAL1
      000060 E4               [12] 1090 	clr	a
      000061 F0               [24] 1091 	movx	@dptr,a
                                   1092 ;	Radio.c:78: FSCAL0    = 0x1F; //Frequency synthesizer calibration
      000062 90 DF 1F         [24] 1093 	mov	dptr,#_FSCAL0
      000065 74 1F            [12] 1094 	mov	a,#0x1f
      000067 F0               [24] 1095 	movx	@dptr,a
                                   1096 ;	Radio.c:79: TEST1     = 0x31; //Various test settings
      000068 90 DF 24         [24] 1097 	mov	dptr,#_TEST1
      00006B 74 31            [12] 1098 	mov	a,#0x31
      00006D F0               [24] 1099 	movx	@dptr,a
                                   1100 ;	Radio.c:80: TEST0     = 0x09; //Various test settings
      00006E 90 DF 25         [24] 1101 	mov	dptr,#_TEST0
      000071 74 09            [12] 1102 	mov	a,#0x09
      000073 F0               [24] 1103 	movx	@dptr,a
                                   1104 ;	Radio.c:81: PA_TABLE0 = 0x60; //PA power setting 0
      000074 90 DF 2E         [24] 1105 	mov	dptr,#_PA_TABLE0
      000077 74 60            [12] 1106 	mov	a,#0x60
      000079 F0               [24] 1107 	movx	@dptr,a
                                   1108 ;	Radio.c:82: IOCFG0    = 0x06; //Radio test signal configuration (P1_5)
      00007A 90 DF 31         [24] 1109 	mov	dptr,#_IOCFG0
      00007D C4               [12] 1110 	swap	a
      00007E F0               [24] 1111 	movx	@dptr,a
                                   1112 ;	Radio.c:83: PKTLEN    = 2;	  //Packet length
      00007F 90 DF 02         [24] 1113 	mov	dptr,#_PKTLEN
      000082 74 02            [12] 1114 	mov	a,#0x02
      000084 F0               [24] 1115 	movx	@dptr,a
                                   1116 ;	Radio.c:85: }
      000085 22               [24] 1117 	ret
                                   1118 ;------------------------------------------------------------
                                   1119 ;Allocation info for local variables in function 'initClock'
                                   1120 ;------------------------------------------------------------
                                   1121 ;	Radio.c:97: void initClock(void)
                                   1122 ;	-----------------------------------------
                                   1123 ;	 function initClock
                                   1124 ;	-----------------------------------------
      000086                       1125 _initClock:
                                   1126 ;	Radio.c:100: CLKCON &= ~0x40;
      000086 53 C6 BF         [24] 1127 	anl	_CLKCON,#0xbf
                                   1128 ;	Radio.c:102: while(CLKCON & 0x40);
      000089                       1129 00101$:
      000089 AE C6            [24] 1130 	mov	r6,_CLKCON
      00008B 7F 00            [12] 1131 	mov	r7,#0x00
      00008D EE               [12] 1132 	mov	a,r6
      00008E 20 E6 F8         [24] 1133 	jb	acc.6,00101$
                                   1134 ;	Radio.c:103: }
      000091 22               [24] 1135 	ret
                                   1136 ;------------------------------------------------------------
                                   1137 ;Allocation info for local variables in function 'initRFStateMach'
                                   1138 ;------------------------------------------------------------
                                   1139 ;	Radio.c:115: void initRFStateMach(void)
                                   1140 ;	-----------------------------------------
                                   1141 ;	 function initRFStateMach
                                   1142 ;	-----------------------------------------
      000092                       1143 _initRFStateMach:
                                   1144 ;	Radio.c:118: RFST = SIDLE;
      000092 75 E1 04         [24] 1145 	mov	_RFST,#0x04
                                   1146 ;	Radio.c:121: RFST = SCAL; //Note MCSM0 register is set to auto-calibrate freq. synt.
      000095 75 E1 01         [24] 1147 	mov	_RFST,#0x01
                                   1148 ;	Radio.c:125: RFTXRXIF = 0;
                                   1149 ;	assignBit
      000098 C2 89            [12] 1150 	clr	_RFTXRXIF
                                   1151 ;	Radio.c:126: }
      00009A 22               [24] 1152 	ret
                                   1153 ;------------------------------------------------------------
                                   1154 ;Allocation info for local variables in function 'construct_AX25_Packet'
                                   1155 ;------------------------------------------------------------
                                   1156 ;frame                     Allocated with name '_construct_AX25_Packet_frame_1_65'
                                   1157 ;ts_Ind                    Allocated to registers 
                                   1158 ;new_Frame_Ptr             Allocated with name '_construct_AX25_Packet_new_Frame_Ptr_1_66'
                                   1159 ;------------------------------------------------------------
                                   1160 ;	Radio.c:140: AX25_Frame* construct_AX25_Packet(Data_Frame* frame)
                                   1161 ;	-----------------------------------------
                                   1162 ;	 function construct_AX25_Packet
                                   1163 ;	-----------------------------------------
      00009B                       1164 _construct_AX25_Packet:
      00009B 85 82*00         [24] 1165 	mov	_construct_AX25_Packet_frame_1_65,dpl
      00009E 85 83*01         [24] 1166 	mov	(_construct_AX25_Packet_frame_1_65 + 1),dph
      0000A1 85 F0*02         [24] 1167 	mov	(_construct_AX25_Packet_frame_1_65 + 2),b
                                   1168 ;	Radio.c:144: AX25_Frame* new_Frame_Ptr           = (AX25_Frame *)malloc(sizeof(AX25_Frame));
      0000A4 90 01 1A         [24] 1169 	mov	dptr,#0x011a
      0000A7 12r00r00         [24] 1170 	lcall	_malloc
      0000AA AB 82            [24] 1171 	mov	r3,dpl
      0000AC AC 83            [24] 1172 	mov	r4,dph
      0000AE 8B*03            [24] 1173 	mov	_construct_AX25_Packet_new_Frame_Ptr_1_66,r3
      0000B0 8C*04            [24] 1174 	mov	(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1),r4
      0000B2 75*05 00         [24] 1175 	mov	(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2),#0x00
                                   1176 ;	Radio.c:147: new_Frame_Ptr->frame_Start          = AX25_FRAME_START;
      0000B5 85*03 82         [24] 1177 	mov	dpl,_construct_AX25_Packet_new_Frame_Ptr_1_66
      0000B8 85*04 83         [24] 1178 	mov	dph,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      0000BB 85*05 F0         [24] 1179 	mov	b,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      0000BE 74 FE            [12] 1180 	mov	a,#0xfe
      0000C0 12r00r00         [24] 1181 	lcall	__gptrput
                                   1182 ;	Radio.c:150: memcpy(new_Frame_Ptr->src_Addr, frame->src_Addr, sizeof(frame->src_Addr));
      0000C3 74 08            [12] 1183 	mov	a,#0x08
      0000C5 25*03            [12] 1184 	add	a,_construct_AX25_Packet_new_Frame_Ptr_1_66
      0000C7 F8               [12] 1185 	mov	r0,a
      0000C8 E4               [12] 1186 	clr	a
      0000C9 35*04            [12] 1187 	addc	a,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      0000CB F9               [12] 1188 	mov	r1,a
      0000CC AF*05            [24] 1189 	mov	r7,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      0000CE 74 02            [12] 1190 	mov	a,#0x02
      0000D0 25*00            [12] 1191 	add	a,_construct_AX25_Packet_frame_1_65
      0000D2 FC               [12] 1192 	mov	r4,a
      0000D3 74 01            [12] 1193 	mov	a,#0x01
      0000D5 35*01            [12] 1194 	addc	a,(_construct_AX25_Packet_frame_1_65 + 1)
      0000D7 FD               [12] 1195 	mov	r5,a
      0000D8 AE*02            [24] 1196 	mov	r6,(_construct_AX25_Packet_frame_1_65 + 2)
      0000DA 8C*00            [24] 1197 	mov	_memcpy_PARM_2,r4
      0000DC 8D*01            [24] 1198 	mov	(_memcpy_PARM_2 + 1),r5
      0000DE 8E*02            [24] 1199 	mov	(_memcpy_PARM_2 + 2),r6
      0000E0 75*00 07         [24] 1200 	mov	_memcpy_PARM_3,#0x07
      0000E3 75*01 00         [24] 1201 	mov	(_memcpy_PARM_3 + 1),#0x00
      0000E6 88 82            [24] 1202 	mov	dpl,r0
      0000E8 89 83            [24] 1203 	mov	dph,r1
      0000EA 8F F0            [24] 1204 	mov	b,r7
      0000EC 12r00r00         [24] 1205 	lcall	_memcpy
                                   1206 ;	Radio.c:151: memcpy(new_Frame_Ptr->dest_Addr, frame->dest_Addr, sizeof(frame->dest_Addr));
      0000EF 74 01            [12] 1207 	mov	a,#0x01
      0000F1 25*03            [12] 1208 	add	a,_construct_AX25_Packet_new_Frame_Ptr_1_66
      0000F3 FD               [12] 1209 	mov	r5,a
      0000F4 E4               [12] 1210 	clr	a
      0000F5 35*04            [12] 1211 	addc	a,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      0000F7 FE               [12] 1212 	mov	r6,a
      0000F8 AF*05            [24] 1213 	mov	r7,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      0000FA 74 FB            [12] 1214 	mov	a,#0xfb
      0000FC 25*00            [12] 1215 	add	a,_construct_AX25_Packet_frame_1_65
      0000FE FA               [12] 1216 	mov	r2,a
      0000FF E4               [12] 1217 	clr	a
      000100 35*01            [12] 1218 	addc	a,(_construct_AX25_Packet_frame_1_65 + 1)
      000102 FB               [12] 1219 	mov	r3,a
      000103 AC*02            [24] 1220 	mov	r4,(_construct_AX25_Packet_frame_1_65 + 2)
      000105 8A*00            [24] 1221 	mov	_memcpy_PARM_2,r2
      000107 8B*01            [24] 1222 	mov	(_memcpy_PARM_2 + 1),r3
      000109 8C*02            [24] 1223 	mov	(_memcpy_PARM_2 + 2),r4
      00010B 75*00 07         [24] 1224 	mov	_memcpy_PARM_3,#0x07
      00010E 75*01 00         [24] 1225 	mov	(_memcpy_PARM_3 + 1),#0x00
      000111 8D 82            [24] 1226 	mov	dpl,r5
      000113 8E 83            [24] 1227 	mov	dph,r6
      000115 8F F0            [24] 1228 	mov	b,r7
      000117 12r00r00         [24] 1229 	lcall	_memcpy
                                   1230 ;	Radio.c:154: new_Frame_Ptr->control              = AX25_CONTROL;
      00011A 74 0F            [12] 1231 	mov	a,#0x0f
      00011C 25*03            [12] 1232 	add	a,_construct_AX25_Packet_new_Frame_Ptr_1_66
      00011E FD               [12] 1233 	mov	r5,a
      00011F E4               [12] 1234 	clr	a
      000120 35*04            [12] 1235 	addc	a,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      000122 FE               [12] 1236 	mov	r6,a
      000123 AF*05            [24] 1237 	mov	r7,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      000125 8D 82            [24] 1238 	mov	dpl,r5
      000127 8E 83            [24] 1239 	mov	dph,r6
      000129 8F F0            [24] 1240 	mov	b,r7
      00012B 74 03            [12] 1241 	mov	a,#0x03
      00012D 12r00r00         [24] 1242 	lcall	__gptrput
                                   1243 ;	Radio.c:155: new_Frame_Ptr->proto_Ident          = AX25_PROTO_IDENT;
      000130 74 10            [12] 1244 	mov	a,#0x10
      000132 25*03            [12] 1245 	add	a,_construct_AX25_Packet_new_Frame_Ptr_1_66
      000134 FD               [12] 1246 	mov	r5,a
      000135 E4               [12] 1247 	clr	a
      000136 35*04            [12] 1248 	addc	a,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      000138 FE               [12] 1249 	mov	r6,a
      000139 AF*05            [24] 1250 	mov	r7,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      00013B 8D 82            [24] 1251 	mov	dpl,r5
      00013D 8E 83            [24] 1252 	mov	dph,r6
      00013F 8F F0            [24] 1253 	mov	b,r7
      000141 74 F0            [12] 1254 	mov	a,#0xf0
      000143 12r00r00         [24] 1255 	lcall	__gptrput
                                   1256 ;	Radio.c:156: new_Frame_Ptr->frame_ID             = AX25_FRAME_ID;
      000146 74 11            [12] 1257 	mov	a,#0x11
      000148 25*03            [12] 1258 	add	a,_construct_AX25_Packet_new_Frame_Ptr_1_66
      00014A FD               [12] 1259 	mov	r5,a
      00014B E4               [12] 1260 	clr	a
      00014C 35*04            [12] 1261 	addc	a,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      00014E FE               [12] 1262 	mov	r6,a
      00014F AF*05            [24] 1263 	mov	r7,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      000151 8D 82            [24] 1264 	mov	dpl,r5
      000153 8E 83            [24] 1265 	mov	dph,r6
      000155 8F F0            [24] 1266 	mov	b,r7
      000157 E4               [12] 1267 	clr	a
      000158 12r00r00         [24] 1268 	lcall	__gptrput
                                   1269 ;	Radio.c:159: new_Frame_Ptr->master_Frame_Count   = frame->master_Frame_Count;
      00015B 74 12            [12] 1270 	mov	a,#0x12
      00015D 25*03            [12] 1271 	add	a,_construct_AX25_Packet_new_Frame_Ptr_1_66
      00015F FD               [12] 1272 	mov	r5,a
      000160 E4               [12] 1273 	clr	a
      000161 35*04            [12] 1274 	addc	a,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      000163 FE               [12] 1275 	mov	r6,a
      000164 AF*05            [24] 1276 	mov	r7,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      000166 74 09            [12] 1277 	mov	a,#0x09
      000168 25*00            [12] 1278 	add	a,_construct_AX25_Packet_frame_1_65
      00016A FA               [12] 1279 	mov	r2,a
      00016B 74 01            [12] 1280 	mov	a,#0x01
      00016D 35*01            [12] 1281 	addc	a,(_construct_AX25_Packet_frame_1_65 + 1)
      00016F FB               [12] 1282 	mov	r3,a
      000170 AC*02            [24] 1283 	mov	r4,(_construct_AX25_Packet_frame_1_65 + 2)
      000172 8A 82            [24] 1284 	mov	dpl,r2
      000174 8B 83            [24] 1285 	mov	dph,r3
      000176 8C F0            [24] 1286 	mov	b,r4
      000178 12r00r00         [24] 1287 	lcall	__gptrget
      00017B 8D 82            [24] 1288 	mov	dpl,r5
      00017D 8E 83            [24] 1289 	mov	dph,r6
      00017F 8F F0            [24] 1290 	mov	b,r7
      000181 12r00r00         [24] 1291 	lcall	__gptrput
                                   1292 ;	Radio.c:160: new_Frame_Ptr->vc_Frame_Count       = frame->vc_Frame_Count;
      000184 74 13            [12] 1293 	mov	a,#0x13
      000186 25*03            [12] 1294 	add	a,_construct_AX25_Packet_new_Frame_Ptr_1_66
      000188 FD               [12] 1295 	mov	r5,a
      000189 E4               [12] 1296 	clr	a
      00018A 35*04            [12] 1297 	addc	a,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      00018C FE               [12] 1298 	mov	r6,a
      00018D AF*05            [24] 1299 	mov	r7,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      00018F 74 0A            [12] 1300 	mov	a,#0x0a
      000191 25*00            [12] 1301 	add	a,_construct_AX25_Packet_frame_1_65
      000193 FA               [12] 1302 	mov	r2,a
      000194 74 01            [12] 1303 	mov	a,#0x01
      000196 35*01            [12] 1304 	addc	a,(_construct_AX25_Packet_frame_1_65 + 1)
      000198 FB               [12] 1305 	mov	r3,a
      000199 AC*02            [24] 1306 	mov	r4,(_construct_AX25_Packet_frame_1_65 + 2)
      00019B 8A 82            [24] 1307 	mov	dpl,r2
      00019D 8B 83            [24] 1308 	mov	dph,r3
      00019F 8C F0            [24] 1309 	mov	b,r4
      0001A1 12r00r00         [24] 1310 	lcall	__gptrget
      0001A4 8D 82            [24] 1311 	mov	dpl,r5
      0001A6 8E 83            [24] 1312 	mov	dph,r6
      0001A8 8F F0            [24] 1313 	mov	b,r7
      0001AA 12r00r00         [24] 1314 	lcall	__gptrput
                                   1315 ;	Radio.c:161: new_Frame_Ptr->first_Header_Pointer = AX25_1ST_HEADER_PTR;
      0001AD 74 14            [12] 1316 	mov	a,#0x14
      0001AF 25*03            [12] 1317 	add	a,_construct_AX25_Packet_new_Frame_Ptr_1_66
      0001B1 FD               [12] 1318 	mov	r5,a
      0001B2 E4               [12] 1319 	clr	a
      0001B3 35*04            [12] 1320 	addc	a,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      0001B5 FE               [12] 1321 	mov	r6,a
      0001B6 AF*05            [24] 1322 	mov	r7,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      0001B8 8D 82            [24] 1323 	mov	dpl,r5
      0001BA 8E 83            [24] 1324 	mov	dph,r6
      0001BC 8F F0            [24] 1325 	mov	b,r7
      0001BE 74 FE            [12] 1326 	mov	a,#0xfe
      0001C0 12r00r00         [24] 1327 	lcall	__gptrput
                                   1328 ;	Radio.c:164: memcpy(new_Frame_Ptr->data, frame->data, sizeof(frame->data));
      0001C3 74 15            [12] 1329 	mov	a,#0x15
      0001C5 25*03            [12] 1330 	add	a,_construct_AX25_Packet_new_Frame_Ptr_1_66
      0001C7 FD               [12] 1331 	mov	r5,a
      0001C8 E4               [12] 1332 	clr	a
      0001C9 35*04            [12] 1333 	addc	a,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      0001CB FE               [12] 1334 	mov	r6,a
      0001CC AF*05            [24] 1335 	mov	r7,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      0001CE AA*00            [24] 1336 	mov	r2,_construct_AX25_Packet_frame_1_65
      0001D0 AB*01            [24] 1337 	mov	r3,(_construct_AX25_Packet_frame_1_65 + 1)
      0001D2 AC*02            [24] 1338 	mov	r4,(_construct_AX25_Packet_frame_1_65 + 2)
      0001D4 8A*00            [24] 1339 	mov	_memcpy_PARM_2,r2
      0001D6 8B*01            [24] 1340 	mov	(_memcpy_PARM_2 + 1),r3
      0001D8 8C*02            [24] 1341 	mov	(_memcpy_PARM_2 + 2),r4
      0001DA 75*00 FB         [24] 1342 	mov	_memcpy_PARM_3,#0xfb
      0001DD 75*01 00         [24] 1343 	mov	(_memcpy_PARM_3 + 1),#0x00
      0001E0 8D 82            [24] 1344 	mov	dpl,r5
      0001E2 8E 83            [24] 1345 	mov	dph,r6
      0001E4 8F F0            [24] 1346 	mov	b,r7
      0001E6 12r00r00         [24] 1347 	lcall	_memcpy
                                   1348 ;	Radio.c:167: new_Frame_Ptr->frame_Status         = 0xF0;
      0001E9 74 10            [12] 1349 	mov	a,#0x10
      0001EB 25*03            [12] 1350 	add	a,_construct_AX25_Packet_new_Frame_Ptr_1_66
      0001ED FD               [12] 1351 	mov	r5,a
      0001EE 74 01            [12] 1352 	mov	a,#0x01
      0001F0 35*04            [12] 1353 	addc	a,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      0001F2 FE               [12] 1354 	mov	r6,a
      0001F3 AF*05            [24] 1355 	mov	r7,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      0001F5 8D 82            [24] 1356 	mov	dpl,r5
      0001F7 8E 83            [24] 1357 	mov	dph,r6
      0001F9 8F F0            [24] 1358 	mov	b,r7
      0001FB 74 F0            [12] 1359 	mov	a,#0xf0
      0001FD 12r00r00         [24] 1360 	lcall	__gptrput
                                   1361 ;	Radio.c:170: memcpy(new_Frame_Ptr->time_Stamp, frame->time_Stamp, sizeof(frame->time_Stamp));	
      000200 74 11            [12] 1362 	mov	a,#0x11
      000202 25*03            [12] 1363 	add	a,_construct_AX25_Packet_new_Frame_Ptr_1_66
      000204 FD               [12] 1364 	mov	r5,a
      000205 74 01            [12] 1365 	mov	a,#0x01
      000207 35*04            [12] 1366 	addc	a,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      000209 FE               [12] 1367 	mov	r6,a
      00020A AF*05            [24] 1368 	mov	r7,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      00020C 74 0B            [12] 1369 	mov	a,#0x0b
      00020E 25*00            [12] 1370 	add	a,_construct_AX25_Packet_frame_1_65
      000210 FA               [12] 1371 	mov	r2,a
      000211 74 01            [12] 1372 	mov	a,#0x01
      000213 35*01            [12] 1373 	addc	a,(_construct_AX25_Packet_frame_1_65 + 1)
      000215 FB               [12] 1374 	mov	r3,a
      000216 AC*02            [24] 1375 	mov	r4,(_construct_AX25_Packet_frame_1_65 + 2)
      000218 8A*00            [24] 1376 	mov	_memcpy_PARM_2,r2
      00021A 8B*01            [24] 1377 	mov	(_memcpy_PARM_2 + 1),r3
      00021C 8C*02            [24] 1378 	mov	(_memcpy_PARM_2 + 2),r4
      00021E 75*00 08         [24] 1379 	mov	_memcpy_PARM_3,#0x08
      000221 75*01 00         [24] 1380 	mov	(_memcpy_PARM_3 + 1),#0x00
      000224 8D 82            [24] 1381 	mov	dpl,r5
      000226 8E 83            [24] 1382 	mov	dph,r6
      000228 8F F0            [24] 1383 	mov	b,r7
      00022A 12r00r00         [24] 1384 	lcall	_memcpy
                                   1385 ;	Radio.c:173: new_Frame_Ptr->frame_End            = AX25_FRAME_END;
      00022D 74 19            [12] 1386 	mov	a,#0x19
      00022F 25*03            [12] 1387 	add	a,_construct_AX25_Packet_new_Frame_Ptr_1_66
      000231 FD               [12] 1388 	mov	r5,a
      000232 74 01            [12] 1389 	mov	a,#0x01
      000234 35*04            [12] 1390 	addc	a,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      000236 FE               [12] 1391 	mov	r6,a
      000237 AF*05            [24] 1392 	mov	r7,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
      000239 8D 82            [24] 1393 	mov	dpl,r5
      00023B 8E 83            [24] 1394 	mov	dph,r6
      00023D 8F F0            [24] 1395 	mov	b,r7
      00023F 74 FE            [12] 1396 	mov	a,#0xfe
      000241 12r00r00         [24] 1397 	lcall	__gptrput
                                   1398 ;	Radio.c:175: return new_Frame_Ptr;
      000244 85*03 82         [24] 1399 	mov	dpl,_construct_AX25_Packet_new_Frame_Ptr_1_66
      000247 85*04 83         [24] 1400 	mov	dph,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 1)
      00024A 85*05 F0         [24] 1401 	mov	b,(_construct_AX25_Packet_new_Frame_Ptr_1_66 + 2)
                                   1402 ;	Radio.c:176: }
      00024D 22               [24] 1403 	ret
                                   1404 ;------------------------------------------------------------
                                   1405 ;Allocation info for local variables in function 'decomm_AX25_Packet'
                                   1406 ;------------------------------------------------------------
                                   1407 ;frame                     Allocated with name '_decomm_AX25_Packet_frame_1_67'
                                   1408 ;dataFrame                 Allocated with name '_decomm_AX25_Packet_dataFrame_1_68'
                                   1409 ;------------------------------------------------------------
                                   1410 ;	Radio.c:188: Data_Frame* decomm_AX25_Packet(AX25_Frame *frame)
                                   1411 ;	-----------------------------------------
                                   1412 ;	 function decomm_AX25_Packet
                                   1413 ;	-----------------------------------------
      00024E                       1414 _decomm_AX25_Packet:
      00024E 85 82*06         [24] 1415 	mov	_decomm_AX25_Packet_frame_1_67,dpl
      000251 85 83*07         [24] 1416 	mov	(_decomm_AX25_Packet_frame_1_67 + 1),dph
      000254 85 F0*08         [24] 1417 	mov	(_decomm_AX25_Packet_frame_1_67 + 2),b
                                   1418 ;	Radio.c:191: Data_Frame* dataFrame = (Data_Frame *) malloc (sizeof(Data_Frame));
      000257 90 01 13         [24] 1419 	mov	dptr,#0x0113
      00025A 12r00r00         [24] 1420 	lcall	_malloc
      00025D AB 82            [24] 1421 	mov	r3,dpl
      00025F AC 83            [24] 1422 	mov	r4,dph
      000261 8B*09            [24] 1423 	mov	_decomm_AX25_Packet_dataFrame_1_68,r3
      000263 8C*0A            [24] 1424 	mov	(_decomm_AX25_Packet_dataFrame_1_68 + 1),r4
      000265 75*0B 00         [24] 1425 	mov	(_decomm_AX25_Packet_dataFrame_1_68 + 2),#0x00
                                   1426 ;	Radio.c:194: memcpy(dataFrame->data, frame->data, sizeof(frame->data));
      000268 A8*09            [24] 1427 	mov	r0,_decomm_AX25_Packet_dataFrame_1_68
      00026A A9*0A            [24] 1428 	mov	r1,(_decomm_AX25_Packet_dataFrame_1_68 + 1)
      00026C AC*0B            [24] 1429 	mov	r4,(_decomm_AX25_Packet_dataFrame_1_68 + 2)
      00026E 74 15            [12] 1430 	mov	a,#0x15
      000270 25*06            [12] 1431 	add	a,_decomm_AX25_Packet_frame_1_67
      000272 FA               [12] 1432 	mov	r2,a
      000273 E4               [12] 1433 	clr	a
      000274 35*07            [12] 1434 	addc	a,(_decomm_AX25_Packet_frame_1_67 + 1)
      000276 FB               [12] 1435 	mov	r3,a
      000277 AF*08            [24] 1436 	mov	r7,(_decomm_AX25_Packet_frame_1_67 + 2)
      000279 8A*00            [24] 1437 	mov	_memcpy_PARM_2,r2
      00027B 8B*01            [24] 1438 	mov	(_memcpy_PARM_2 + 1),r3
      00027D 8F*02            [24] 1439 	mov	(_memcpy_PARM_2 + 2),r7
      00027F 75*00 FB         [24] 1440 	mov	_memcpy_PARM_3,#0xfb
      000282 75*01 00         [24] 1441 	mov	(_memcpy_PARM_3 + 1),#0x00
      000285 88 82            [24] 1442 	mov	dpl,r0
      000287 89 83            [24] 1443 	mov	dph,r1
      000289 8C F0            [24] 1444 	mov	b,r4
      00028B 12r00r00         [24] 1445 	lcall	_memcpy
                                   1446 ;	Radio.c:197: memcpy(dataFrame->dest_Addr, frame->dest_Addr, sizeof(frame->dest_Addr));
      00028E 74 FB            [12] 1447 	mov	a,#0xfb
      000290 25*09            [12] 1448 	add	a,_decomm_AX25_Packet_dataFrame_1_68
      000292 FD               [12] 1449 	mov	r5,a
      000293 E4               [12] 1450 	clr	a
      000294 35*0A            [12] 1451 	addc	a,(_decomm_AX25_Packet_dataFrame_1_68 + 1)
      000296 FE               [12] 1452 	mov	r6,a
      000297 AF*0B            [24] 1453 	mov	r7,(_decomm_AX25_Packet_dataFrame_1_68 + 2)
      000299 74 01            [12] 1454 	mov	a,#0x01
      00029B 25*06            [12] 1455 	add	a,_decomm_AX25_Packet_frame_1_67
      00029D FA               [12] 1456 	mov	r2,a
      00029E E4               [12] 1457 	clr	a
      00029F 35*07            [12] 1458 	addc	a,(_decomm_AX25_Packet_frame_1_67 + 1)
      0002A1 FB               [12] 1459 	mov	r3,a
      0002A2 AC*08            [24] 1460 	mov	r4,(_decomm_AX25_Packet_frame_1_67 + 2)
      0002A4 8A*00            [24] 1461 	mov	_memcpy_PARM_2,r2
      0002A6 8B*01            [24] 1462 	mov	(_memcpy_PARM_2 + 1),r3
      0002A8 8C*02            [24] 1463 	mov	(_memcpy_PARM_2 + 2),r4
      0002AA 75*00 07         [24] 1464 	mov	_memcpy_PARM_3,#0x07
      0002AD 75*01 00         [24] 1465 	mov	(_memcpy_PARM_3 + 1),#0x00
      0002B0 8D 82            [24] 1466 	mov	dpl,r5
      0002B2 8E 83            [24] 1467 	mov	dph,r6
      0002B4 8F F0            [24] 1468 	mov	b,r7
      0002B6 12r00r00         [24] 1469 	lcall	_memcpy
                                   1470 ;	Radio.c:200: memcpy(dataFrame->src_Addr, frame->src_Addr, sizeof(frame->src_Addr));
      0002B9 74 02            [12] 1471 	mov	a,#0x02
      0002BB 25*09            [12] 1472 	add	a,_decomm_AX25_Packet_dataFrame_1_68
      0002BD FD               [12] 1473 	mov	r5,a
      0002BE 74 01            [12] 1474 	mov	a,#0x01
      0002C0 35*0A            [12] 1475 	addc	a,(_decomm_AX25_Packet_dataFrame_1_68 + 1)
      0002C2 FE               [12] 1476 	mov	r6,a
      0002C3 AF*0B            [24] 1477 	mov	r7,(_decomm_AX25_Packet_dataFrame_1_68 + 2)
      0002C5 74 08            [12] 1478 	mov	a,#0x08
      0002C7 25*06            [12] 1479 	add	a,_decomm_AX25_Packet_frame_1_67
      0002C9 FA               [12] 1480 	mov	r2,a
      0002CA E4               [12] 1481 	clr	a
      0002CB 35*07            [12] 1482 	addc	a,(_decomm_AX25_Packet_frame_1_67 + 1)
      0002CD FB               [12] 1483 	mov	r3,a
      0002CE AC*08            [24] 1484 	mov	r4,(_decomm_AX25_Packet_frame_1_67 + 2)
      0002D0 8A*00            [24] 1485 	mov	_memcpy_PARM_2,r2
      0002D2 8B*01            [24] 1486 	mov	(_memcpy_PARM_2 + 1),r3
      0002D4 8C*02            [24] 1487 	mov	(_memcpy_PARM_2 + 2),r4
      0002D6 75*00 07         [24] 1488 	mov	_memcpy_PARM_3,#0x07
      0002D9 75*01 00         [24] 1489 	mov	(_memcpy_PARM_3 + 1),#0x00
      0002DC 8D 82            [24] 1490 	mov	dpl,r5
      0002DE 8E 83            [24] 1491 	mov	dph,r6
      0002E0 8F F0            [24] 1492 	mov	b,r7
      0002E2 12r00r00         [24] 1493 	lcall	_memcpy
                                   1494 ;	Radio.c:203: dataFrame->master_Frame_Count = frame->master_Frame_Count;	
      0002E5 74 09            [12] 1495 	mov	a,#0x09
      0002E7 25*09            [12] 1496 	add	a,_decomm_AX25_Packet_dataFrame_1_68
      0002E9 FD               [12] 1497 	mov	r5,a
      0002EA 74 01            [12] 1498 	mov	a,#0x01
      0002EC 35*0A            [12] 1499 	addc	a,(_decomm_AX25_Packet_dataFrame_1_68 + 1)
      0002EE FE               [12] 1500 	mov	r6,a
      0002EF AF*0B            [24] 1501 	mov	r7,(_decomm_AX25_Packet_dataFrame_1_68 + 2)
      0002F1 74 12            [12] 1502 	mov	a,#0x12
      0002F3 25*06            [12] 1503 	add	a,_decomm_AX25_Packet_frame_1_67
      0002F5 FA               [12] 1504 	mov	r2,a
      0002F6 E4               [12] 1505 	clr	a
      0002F7 35*07            [12] 1506 	addc	a,(_decomm_AX25_Packet_frame_1_67 + 1)
      0002F9 FB               [12] 1507 	mov	r3,a
      0002FA AC*08            [24] 1508 	mov	r4,(_decomm_AX25_Packet_frame_1_67 + 2)
      0002FC 8A 82            [24] 1509 	mov	dpl,r2
      0002FE 8B 83            [24] 1510 	mov	dph,r3
      000300 8C F0            [24] 1511 	mov	b,r4
      000302 12r00r00         [24] 1512 	lcall	__gptrget
      000305 8D 82            [24] 1513 	mov	dpl,r5
      000307 8E 83            [24] 1514 	mov	dph,r6
      000309 8F F0            [24] 1515 	mov	b,r7
      00030B 12r00r00         [24] 1516 	lcall	__gptrput
                                   1517 ;	Radio.c:204: dataFrame->vc_Frame_Count = frame->vc_Frame_Count;	
      00030E 74 0A            [12] 1518 	mov	a,#0x0a
      000310 25*09            [12] 1519 	add	a,_decomm_AX25_Packet_dataFrame_1_68
      000312 FD               [12] 1520 	mov	r5,a
      000313 74 01            [12] 1521 	mov	a,#0x01
      000315 35*0A            [12] 1522 	addc	a,(_decomm_AX25_Packet_dataFrame_1_68 + 1)
      000317 FE               [12] 1523 	mov	r6,a
      000318 AF*0B            [24] 1524 	mov	r7,(_decomm_AX25_Packet_dataFrame_1_68 + 2)
      00031A 74 13            [12] 1525 	mov	a,#0x13
      00031C 25*06            [12] 1526 	add	a,_decomm_AX25_Packet_frame_1_67
      00031E FA               [12] 1527 	mov	r2,a
      00031F E4               [12] 1528 	clr	a
      000320 35*07            [12] 1529 	addc	a,(_decomm_AX25_Packet_frame_1_67 + 1)
      000322 FB               [12] 1530 	mov	r3,a
      000323 AC*08            [24] 1531 	mov	r4,(_decomm_AX25_Packet_frame_1_67 + 2)
      000325 8A 82            [24] 1532 	mov	dpl,r2
      000327 8B 83            [24] 1533 	mov	dph,r3
      000329 8C F0            [24] 1534 	mov	b,r4
      00032B 12r00r00         [24] 1535 	lcall	__gptrget
      00032E 8D 82            [24] 1536 	mov	dpl,r5
      000330 8E 83            [24] 1537 	mov	dph,r6
      000332 8F F0            [24] 1538 	mov	b,r7
      000334 12r00r00         [24] 1539 	lcall	__gptrput
                                   1540 ;	Radio.c:207: memcpy(dataFrame->time_Stamp, frame->time_Stamp, sizeof(uint8) * 8);	
      000337 74 0B            [12] 1541 	mov	a,#0x0b
      000339 25*09            [12] 1542 	add	a,_decomm_AX25_Packet_dataFrame_1_68
      00033B FD               [12] 1543 	mov	r5,a
      00033C 74 01            [12] 1544 	mov	a,#0x01
      00033E 35*0A            [12] 1545 	addc	a,(_decomm_AX25_Packet_dataFrame_1_68 + 1)
      000340 FE               [12] 1546 	mov	r6,a
      000341 AF*0B            [24] 1547 	mov	r7,(_decomm_AX25_Packet_dataFrame_1_68 + 2)
      000343 74 11            [12] 1548 	mov	a,#0x11
      000345 25*06            [12] 1549 	add	a,_decomm_AX25_Packet_frame_1_67
      000347 FA               [12] 1550 	mov	r2,a
      000348 74 01            [12] 1551 	mov	a,#0x01
      00034A 35*07            [12] 1552 	addc	a,(_decomm_AX25_Packet_frame_1_67 + 1)
      00034C FB               [12] 1553 	mov	r3,a
      00034D AC*08            [24] 1554 	mov	r4,(_decomm_AX25_Packet_frame_1_67 + 2)
      00034F 8A*00            [24] 1555 	mov	_memcpy_PARM_2,r2
      000351 8B*01            [24] 1556 	mov	(_memcpy_PARM_2 + 1),r3
      000353 8C*02            [24] 1557 	mov	(_memcpy_PARM_2 + 2),r4
      000355 75*00 08         [24] 1558 	mov	_memcpy_PARM_3,#0x08
      000358 75*01 00         [24] 1559 	mov	(_memcpy_PARM_3 + 1),#0x00
      00035B 8D 82            [24] 1560 	mov	dpl,r5
      00035D 8E 83            [24] 1561 	mov	dph,r6
      00035F 8F F0            [24] 1562 	mov	b,r7
      000361 12r00r00         [24] 1563 	lcall	_memcpy
                                   1564 ;	Radio.c:210: free(frame);
      000364 AD*06            [24] 1565 	mov	r5,_decomm_AX25_Packet_frame_1_67
      000366 AE*07            [24] 1566 	mov	r6,(_decomm_AX25_Packet_frame_1_67 + 1)
      000368 AF*08            [24] 1567 	mov	r7,(_decomm_AX25_Packet_frame_1_67 + 2)
      00036A 8D 82            [24] 1568 	mov	dpl,r5
      00036C 8E 83            [24] 1569 	mov	dph,r6
      00036E 8F F0            [24] 1570 	mov	b,r7
      000370 12r00r00         [24] 1571 	lcall	_free
                                   1572 ;	Radio.c:212: return dataFrame;	
      000373 85*09 82         [24] 1573 	mov	dpl,_decomm_AX25_Packet_dataFrame_1_68
      000376 85*0A 83         [24] 1574 	mov	dph,(_decomm_AX25_Packet_dataFrame_1_68 + 1)
      000379 85*0B F0         [24] 1575 	mov	b,(_decomm_AX25_Packet_dataFrame_1_68 + 2)
                                   1576 ;	Radio.c:213: }
      00037C 22               [24] 1577 	ret
                                   1578 ;------------------------------------------------------------
                                   1579 ;Allocation info for local variables in function 'DMA_ISR_RX'
                                   1580 ;------------------------------------------------------------
                                   1581 ;	Radio.c:230: void DMA_ISR_RX(void) __interrupt (1)
                                   1582 ;	-----------------------------------------
                                   1583 ;	 function DMA_ISR_RX
                                   1584 ;	-----------------------------------------
      00037D                       1585 _DMA_ISR_RX:
      00037D C0 E0            [24] 1586 	push	acc
      00037F C0 07            [24] 1587 	push	ar7
      000381 C0 06            [24] 1588 	push	ar6
      000383 C0 D0            [24] 1589 	push	psw
      000385 75 D0 00         [24] 1590 	mov	psw,#0x00
                                   1591 ;	Radio.c:232: IRCON &= ~0x01;
      000388 53 C0 FE         [24] 1592 	anl	_IRCON,#0xfe
                                   1593 ;	Radio.c:234: if(DMAIRQ & 0x01)
      00038B AE D1            [24] 1594 	mov	r6,_DMAIRQ
      00038D 7F 00            [12] 1595 	mov	r7,#0x00
      00038F EE               [12] 1596 	mov	a,r6
      000390 30 E0 0C         [24] 1597 	jnb	acc.0,00103$
                                   1598 ;	Radio.c:239: DMAIRQ &= ~0x01;
      000393 53 D1 FE         [24] 1599 	anl	_DMAIRQ,#0xfe
                                   1600 ;	Radio.c:240: DMAARM |= 0x01;
      000396 AE D6            [24] 1601 	mov	r6,_DMAARM
      000398 7F 00            [12] 1602 	mov	r7,#0x00
      00039A 43 06 01         [24] 1603 	orl	ar6,#0x01
      00039D 8E D6            [24] 1604 	mov	_DMAARM,r6
      00039F                       1605 00103$:
                                   1606 ;	Radio.c:242: }
      00039F D0 D0            [24] 1607 	pop	psw
      0003A1 D0 06            [24] 1608 	pop	ar6
      0003A3 D0 07            [24] 1609 	pop	ar7
      0003A5 D0 E0            [24] 1610 	pop	acc
      0003A7 32               [24] 1611 	reti
                                   1612 ;	eliminated unneeded push/pop dpl
                                   1613 ;	eliminated unneeded push/pop dph
                                   1614 ;	eliminated unneeded push/pop b
                                   1615 ;------------------------------------------------------------
                                   1616 ;Allocation info for local variables in function 'DMA_ISR_TX'
                                   1617 ;------------------------------------------------------------
                                   1618 ;	Radio.c:260: void DMA_ISR_TX(void) __interrupt (2)
                                   1619 ;	-----------------------------------------
                                   1620 ;	 function DMA_ISR_TX
                                   1621 ;	-----------------------------------------
      0003A8                       1622 _DMA_ISR_TX:
      0003A8 C0 E0            [24] 1623 	push	acc
      0003AA C0 82            [24] 1624 	push	dpl
      0003AC C0 83            [24] 1625 	push	dph
      0003AE C0 07            [24] 1626 	push	ar7
      0003B0 C0 06            [24] 1627 	push	ar6
      0003B2 C0 D0            [24] 1628 	push	psw
      0003B4 75 D0 00         [24] 1629 	mov	psw,#0x00
                                   1630 ;	Radio.c:262: IRCON &= ~0x01;
      0003B7 53 C0 FE         [24] 1631 	anl	_IRCON,#0xfe
                                   1632 ;	Radio.c:263: if(DMAIRQ &0x02) 
      0003BA AE D1            [24] 1633 	mov	r6,_DMAIRQ
      0003BC 7F 00            [12] 1634 	mov	r7,#0x00
      0003BE EE               [12] 1635 	mov	a,r6
      0003BF 30 E1 21         [24] 1636 	jnb	acc.1,00106$
                                   1637 ;	Radio.c:265: DMAIRQ &= ~0x02;
      0003C2 53 D1 FD         [24] 1638 	anl	_DMAIRQ,#0xfd
                                   1639 ;	Radio.c:272: DMAARM |=0x02;
      0003C5 AE D6            [24] 1640 	mov	r6,_DMAARM
      0003C7 7F 00            [12] 1641 	mov	r7,#0x00
      0003C9 43 06 02         [24] 1642 	orl	ar6,#0x02
      0003CC 8E D6            [24] 1643 	mov	_DMAARM,r6
                                   1644 ;	Radio.c:273: if(uartProtConfig.uartNum ==0) 
      0003CE 90 F2 37         [24] 1645 	mov	dptr,#_uartProtConfig
      0003D1 E0               [24] 1646 	movx	a,@dptr
      0003D2 20 E0 08         [24] 1647 	jb	acc.0,00102$
                                   1648 ;	Radio.c:275: U0DBUF = uartTxBuffer[0];
      0003D5 90 F1 13         [24] 1649 	mov	dptr,#_uartTxBuffer
      0003D8 E0               [24] 1650 	movx	a,@dptr
      0003D9 F5 C1            [12] 1651 	mov	_U0DBUF,a
      0003DB 80 06            [24] 1652 	sjmp	00106$
      0003DD                       1653 00102$:
                                   1654 ;	Radio.c:279: U1DBUF = uartTxBuffer[0];
      0003DD 90 F1 13         [24] 1655 	mov	dptr,#_uartTxBuffer
      0003E0 E0               [24] 1656 	movx	a,@dptr
      0003E1 F5 F9            [12] 1657 	mov	_U1DBUF,a
      0003E3                       1658 00106$:
                                   1659 ;	Radio.c:282: }
      0003E3 D0 D0            [24] 1660 	pop	psw
      0003E5 D0 06            [24] 1661 	pop	ar6
      0003E7 D0 07            [24] 1662 	pop	ar7
      0003E9 D0 83            [24] 1663 	pop	dph
      0003EB D0 82            [24] 1664 	pop	dpl
      0003ED D0 E0            [24] 1665 	pop	acc
      0003EF 32               [24] 1666 	reti
                                   1667 ;	eliminated unneeded push/pop b
                                   1668 	.area CSEG    (CODE)
                                   1669 	.area CONST   (CODE)
                                   1670 	.area XINIT   (CODE)
                                   1671 	.area CABS    (ABS,CODE)
